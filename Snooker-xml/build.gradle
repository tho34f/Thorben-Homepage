apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse-wtp'

// JDK 17
sourceCompatibility = 20
targetCompatibility = 20

repositories {
    mavenLocal()
    mavenCentral()
    google()
}

dependencies {
 	
 	// Use JUnit test framework.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
    testImplementation 'org.mockito:mockito-core:5.5.0'
 	implementation 'aopalliance:aopalliance:1.0'
 	implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
 	implementation 'commons-logging:commons-logging:1.2'
 	implementation 'org.jsoup:jsoup:1.16.1'
 	//Logging
 	implementation 'org.slf4j:slf4j-api:2.0.9'
	implementation 'ch.qos.logback:logback-classic:1.4.11'
	implementation 'ch.qos.logback:logback-core:1.4.11'
	//Spring
	implementation 'org.springframework:spring-aop:6.0.12'
	implementation 'org.springframework:spring-beans:6.0.12'
	implementation 'org.springframework:spring-context:6.0.12'
	implementation 'org.springframework:spring-core:6.0.12'
	implementation 'org.springframework:spring-expression:6.0.12'
	implementation 'org.springframework:spring-webmvc:6.0.12'
	implementation 'org.springframework:spring-web:6.0.12'
	implementation 'org.springframework.security:spring-security-core:6.0.6'
	implementation 'org.springframework.security:spring-security-web:6.0.6'
	implementation 'org.springframework.security:spring-security-config:6.0.6'
	implementation 'org.springframework.data:spring-data-jpa:3.1.1'
	//Jakarta
	implementation 'jakarta.el:jakarta.el-api:5.0.1'
	implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
	implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
	implementation 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api:3.0.0'
	compileOnly 'jakarta.servlet.jsp:jakarta.servlet.jsp-api:3.1.1'	
	compileOnly 'jakarta.servlet:jakarta.servlet-api:6.0.0'
	compileOnly 'jakarta.websocket:jakarta.websocket-api:2.1.0'
	implementation 'org.glassfish.web:jakarta.servlet.jsp.jstl:3.0.1'
	//MySql
	implementation 'com.mysql:mysql-connector-j:8.1.0'
	// This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:31.1-jre'
    implementation 'com.dropbox.core:dropbox-core-sdk:5.4.4'
    //JWT
    implementation 'com.auth0:java-jwt:4.3.0'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    //Hibernate
    implementation 'org.hibernate:hibernate-validator:8.0.1.Final'
    //Lombock
    compileOnly 'org.projectlombok:lombok:1.18.30'
	
}

task serverDev(type: JavaExec) {
	//dependsOn 'frontendBuild'

	def staticFolder = new File('src/main/webapp/resources/core/static')
	def templatesFolder = new File('src/main/webapp/resources/core/individualArea')

	if (!staticFolder.exists()) {
		println 'Creating static folder...'
		staticFolder.mkdirs()
	}

	if (!templatesFolder.exists()) {
		println 'Creating templates folder...'
		templatesFolder.mkdirs()
	}

	group = "server"
	description = "Run the server with built frontend"
	classpath = sourceSets.main.runtimeClasspath
	setMainClass('com.gitlab.croclabs.react_server.ReactServerApplication')
}

task frontendBuild(type: Exec) {
	group = "server"
	description = "Build the frontend"
	workingDir 'src\\frontend'
	commandLine 'npm.cmd', 'run', 'build'
}

task frontendWatch(type: Exec) {
	group = "server"
	description = "Build the frontend and watch changes"
	workingDir 'src\\frontend'
	commandLine 'npm.cmd', 'run', 'build:watch'
}

//For Eclipse IDE only
eclipse {

  wtp {
  
  	facet {
      file {
      	facet name: 'jst.web', version: '6.0'
      }
    }
    
    component {
      //define context path, default to project folder name
      contextPath = '/thorben-dierkes'
    }
    
  }
}

